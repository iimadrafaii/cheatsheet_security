# Pipeline Automation :

## Source Code and Version Control :
        SVN vs GIT
        Tool to extract sensitive information from a GIT repo : GittyLeaks

SDKs = Software development kits

## Dependency Management :
        JFrog Artifactory or Azure Artifacts

## Automated Testing :
        Unit Testing
        Integration Testing :
                Regression testing : 
                        Ensure that new features do not adversely impact existing features and functionality
        Security Testing :
                SAST
                DAST
                Penetration Testing
        Common Tools :
                Snyk
                Sonarqube

## Continuous Integration and Delivery :
        CI/CD : An automated process can be followed to compile, build, integrate, and deploy new software features
        CI/CD pipeline elements : ( build agents )
                Starting Trigger
                Building Actions
                Testing Actions
                Deployment Actions
                Delivery Actions
        Build orchestrator ==> JENKINS

## Environments :
        DEV - Development
        UAT - User Acceptance Testing
        PreProd - Pre-Production
        DR/HA - Disaster Recovery or High Availability :
                If the switchover is instantaneous, it is usually called a HA environment.
                In the event where some (but still small) downtime is allowed, 
                the environment is called a DR environment.
        Green and Blue Environments :
                Blue server is the current version
                Green server is the newer version deployed
                Blue server is kept for some time to be sure of the green server is good
                Using a proxy or a router, all traffic can then be switched between the two servers if necessary
        Canary Environments :
                Two servers ( similar to green and blue env ) 
                Users are gradually moved to the newer version ( 10% .. 20% ... )  
Common Tools for env ==> Terraform

Developer Bypasses = A common class of vulnerabilities that is discovered in PROD due to insecure code creeping in from DEV


---------------------------------------------------------------------------

